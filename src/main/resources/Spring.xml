<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop.xsd ">
    <context:component-scan base-package="com.zhangzhihao.SpringMVCSeedProject">
        <!--spring配置不扫描以下包-->
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 配置数据源 -->
    <!-- 导入资源文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.userName}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.connectionURL}"/>
        <property name="initialPoolSize" value="${jdbc.initPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="autoCommitOnClose" value="true"/>
    </bean>
    <!-- jpa Entity Factory 配置 -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.zhangzhihao.SpringMVCSeedProject.Model"/>
        <!--<property name="persistenceUnitName" value="${jpa.persistenceUnitName}"/>-->
        <!--<property name="persistenceProvider">-->
        <!--<bean class="org.hibernate.ejb.HibernatePersistence"/>-->
        <!--</property>-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!--<property name="generateDdl" value="${jpa.generateDdl}"/>-->
                <!--<property name="database" value="${jpa.database}"/>-->
                <!--<property name="databasePlatform" value="${jpa.databasePlatform}"/>-->
                <!--<property name="showSql" value="${jpa.showSql}"/>-->
            </bean>
        </property>
        <!-- 配置 JPA 的基本属性. 例如 JPA 实现产品的属性 -->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory
                </prop>
                <prop key="cache.use_query_cache">true</prop>
            </props>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <!--<property name="jpaPropertyMap">-->
        <!--<map>-->
        <!--&lt;!&ndash; 使用自定义的validator进行jsr303验证 &ndash;&gt;-->
        <!--&lt;!&ndash;<entry key="javax.persistence.validation.factory" value-ref="validator"/>&ndash;&gt;-->
        <!--&lt;!&ndash; jsr303验证模式 因为其要么验证 要么不验证 不能按照规则走 所以此处禁用 &ndash;&gt;-->
        <!--&lt;!&ndash; #http://docs.jboss.org/hibernate/entitymanager/3.6/reference/en/html/configuration.html &ndash;&gt;-->
        <!--<entry key="javax.persistence.validation.mode" value="NONE"/>-->

        <!--&lt;!&ndash; 只扫描class文件，不扫描hbm，默认两个都搜索 &ndash;&gt;-->
        <!--<entry key="hibernate.archive.autodetection" value="class"/>-->
        <!--&lt;!&ndash; 不检查@NamedQuery &ndash;&gt;-->
        <!--<entry key="hibernate.query.startup_check" value="false"/>-->

        <!--<entry key="hibernate.query.substitutions" value="${hibernate.query.substitutions}"/>-->
        <!--<entry key="hibernate.default_batch_fetch_size" value="${hibernate.default_batch_fetch_size}"/>-->
        <!--<entry key="hibernate.max_fetch_depth" value="${hibernate.max_fetch_depth}"/>-->
        <!--<entry key="hibernate.generate_statistics" value="${hibernate.generate_statistics}"/>-->
        <!--<entry key="hibernate.bytecode.use_reflection_optimizer" value="${hibernate.bytecode.use_reflection_optimizer}"/>-->
        <!--<entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache}"/>-->
        <!--<entry key="hibernate.cache.use_query_cache" value="${hibernate.cache.use_query_cache}"/>-->
        <!--<entry key="hibernate.cache.region.factory_class" value="${hibernate.cache.region.factory_class}"/>-->
        <!--<entry key="net.sf.ehcache.configurationResourceName" value="${net.sf.ehcache.configurationResourceName}"/>-->
        <!--<entry key="hibernate.cache.use_structured_entries" value="${hibernate.cache.use_structured_entries}"/>-->

        <!--</map>-->
        <!--</property>-->
    </bean>

    <!-- 配置 JPA 使用的事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 配置支持基于注解式事务配置 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--   配置 Spring 的声明式事务
       1. 配置事务管理器 -->
    <!-- <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
         <property name="sessionFactory" ref="sessionFactory"/>
     </bean>-->

    <!-- 2. 配置事务属性, 需要事务管理器 -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="get*" read-only="true"/>-->
    <!--<tx:method name="*"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!-- 3. 配置事务切点, 并把切点和事务属性关联起来 -->
    <!--<aop:config>-->
    <!--<aop:pointcut expression="execution(* com.zhangzhihao.SpringMVCSeedProject.Dao.*.*(..))"-->
    <!--id="txPointcut"/>-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>-->
    <!--</aop:config>-->

    <!--<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">-->
    <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->
</beans>